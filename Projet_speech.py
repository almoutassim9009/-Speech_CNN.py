{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "95ba5113-0505-4d3c-91d7-10a021c54a15",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\BMD TECH\\anaconda3\\envs\\Torch_env\\lib\\site-packages\\tqdm\\auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
      "  from .autonotebook import tqdm as notebook_tqdm\n"
     ]
    }
   ],
   "source": [
    "# Importation des librairies\n",
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import roc_curve, roc_auc_score\n",
    "\n",
    "import torch\n",
    "import torchaudio\n",
    "import torchaudio.transforms as T\n",
    "import torch.nn as nn\n",
    "import torchtext\n",
    "import torchsummary\n",
    "\n",
    "from torch.utils.data import Dataset\n",
    "import torch.nn.functional as F\n",
    "import torch.optim as optim\n",
    "from torch.utils.data import DataLoader, TensorDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1464008d-9706-4a11-bf21-99aa3781924b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----------------------------------------------------------------------------------------------------\n",
      "Nombre total de classes : 30 Classe\n",
      "----------------------------------------------------------------------------------------------------\n",
      "Liste des classes : ['bed', 'bird', 'cat', 'dog', 'down', 'eight', 'five', 'four', 'go', 'happy', 'house', 'left', 'marvel', 'nine', 'no', 'off', 'on', 'one', 'right', 'seven', 'sheila', 'six', 'stop', 'three', 'tree', 'two', 'up', 'wow', 'yes', 'zero']\n",
      "----------------------------------------------------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "# Chemin vers l'ensemble de données \n",
    "Data_chemin = \"C:/Users/BMD TECH/MSI-2/Projet_Speech/augmented_dataset\"\n",
    "Classes = os.listdir(Data_chemin)\n",
    "print(\"-\"*100)\n",
    "print(f\"Nombre total de classes : {len(Classes)} Classe\")\n",
    "print(\"-\"*100)\n",
    "print(\"Liste des classes :\", Classes)\n",
    "print(\"-\"*100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdd70b07-4952-40ba-9bb8-41460842208d",
   "metadata": {},
   "source": [
    "### Les classes avec leurs répartitions dans l'ensemble de données"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b0267928-3966-4511-b097-a0f1df2a6d92",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number of Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bed</th>\n",
       "      <td>1356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bird</th>\n",
       "      <td>1346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cat</th>\n",
       "      <td>1378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dog</th>\n",
       "      <td>1474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>down</th>\n",
       "      <td>1188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>eight</th>\n",
       "      <td>1113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>five</th>\n",
       "      <td>1092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>four</th>\n",
       "      <td>2400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>go</th>\n",
       "      <td>960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>happy</th>\n",
       "      <td>1481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>house</th>\n",
       "      <td>2382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>left</th>\n",
       "      <td>1485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>marvel</th>\n",
       "      <td>1253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nine</th>\n",
       "      <td>1144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>no</th>\n",
       "      <td>957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>off</th>\n",
       "      <td>2244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>on</th>\n",
       "      <td>2228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>one</th>\n",
       "      <td>1276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>right</th>\n",
       "      <td>1276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>seven</th>\n",
       "      <td>1411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sheila</th>\n",
       "      <td>1463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>six</th>\n",
       "      <td>1485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stop</th>\n",
       "      <td>1485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>three</th>\n",
       "      <td>1188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tree</th>\n",
       "      <td>1188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>two</th>\n",
       "      <td>902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>up</th>\n",
       "      <td>1187</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wow</th>\n",
       "      <td>957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yes</th>\n",
       "      <td>1244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>zero</th>\n",
       "      <td>1306</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Number of Classes\n",
       "bed                  1356\n",
       "bird                 1346\n",
       "cat                  1378\n",
       "dog                  1474\n",
       "down                 1188\n",
       "eight                1113\n",
       "five                 1092\n",
       "four                 2400\n",
       "go                    960\n",
       "happy                1481\n",
       "house                2382\n",
       "left                 1485\n",
       "marvel               1253\n",
       "nine                 1144\n",
       "no                    957\n",
       "off                  2244\n",
       "on                   2228\n",
       "one                  1276\n",
       "right                1276\n",
       "seven                1411\n",
       "sheila               1463\n",
       "six                  1485\n",
       "stop                 1485\n",
       "three                1188\n",
       "tree                 1188\n",
       "two                   902\n",
       "up                   1187\n",
       "wow                   957\n",
       "yes                  1244\n",
       "zero                 1306"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def count(path):\n",
    "    size=[]\n",
    "    for file in os.listdir(path):\n",
    "        size.append(len(os.listdir(os.path.join(path,file))))\n",
    "    return pd.DataFrame(size,columns=['Number of Classes', ],index=os.listdir(path))  \n",
    "\n",
    "tr = count(Data_chemin)\n",
    "tr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4da3792b-aa18-49a6-b074-e9e85d295fb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x1500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Votre code pour créer la figure et tracer le graphique\n",
    "plt.figure(figsize=(10, 15))\n",
    "plt.pie(x='Number of Classes', labels=os.listdir(Data_chemin), autopct='%1.1f%%', data=tr)\n",
    "plt.title(\"Distribution de Classes dans l'ensemble de données\", fontsize=20)\n",
    "\n",
    "# Enregistrer le graphique avant de l'afficher\n",
    "plt.savefig('distribution_classes.png')\n",
    "\n",
    "# Afficher la figure\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7c290eb6-6b12-4807-a253-dd8e3b73815a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6b7cf0c8-03ec-4323-9b00-2c57a33198a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "root_dir = Data_chemin\n",
    "folders = os.listdir(Data_chemin)\n",
    "\n",
    "# Liste pour stocker les chemins des fichiers audio et leurs étiquettes\n",
    "audio_paths = []\n",
    "labels = []\n",
    "\n",
    "# Parcourir chaque dossier\n",
    "for folder in folders:\n",
    "    folder_path = os.path.join(root_dir, folder)\n",
    "    # Parcourir chaque fichier dans le dossier\n",
    "    for file in os.listdir(folder_path):\n",
    "        file_path = os.path.join(folder_path, file)\n",
    "        # Vérifier si le fichier est un fichier audio\n",
    "        if file_path.endswith('.wav') or file_path.endswith('.mp3'):\n",
    "            # Ajouter le chemin du fichier audio et son étiquette (nom du dossier)\n",
    "            audio_paths.append(file_path)\n",
    "            labels.append(folder)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5a69b028-b445-4361-afc3-7e0fc27bbeb1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def charger_et_extraire_spectrogrammes(audio_paths):\n",
    "    spectrograms = []\n",
    "    for audio_path in audio_paths:\n",
    "        waveform, sample_rate = torchaudio.load(audio_path)\n",
    "        # Calculer le Mel spectrogram\n",
    "        spectrogram = T.MelSpectrogram(\n",
    "            sample_rate=sample_rate,\n",
    "            n_fft=2048,\n",
    "            hop_length=256,\n",
    "            n_mels=64,  # Réduction du nombre de filtres Mel\n",
    "            normalized=True\n",
    "        )(waveform) \n",
    "        spectrograms.append(spectrogram)\n",
    "\n",
    "    return torch.stack(spectrograms)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c140624d-b1fd-4d5e-beec-ded610a628e3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "torch.Size([41849, 1, 64, 63])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Utilisation des listes audio_paths et labels pour charger et extraire les spectrogrammes\n",
    "spectrograms = charger_et_extraire_spectrogrammes(audio_paths)\n",
    "spectrograms.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62c4f4a3-be46-4cf8-9d8f-72b6a427c3da",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "505d8edd-035a-42b2-ad29-083017c58930",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Afficher le spectrogramme avec les étiquettes de temps\n",
    "plt.imshow(spectrograms[0].log2()[0, :, :].numpy(),\n",
    "           cmap='inferno', aspect='auto', origin='lower')\n",
    "plt.xlabel('Temps (s)')\n",
    "plt.ylabel('Fréquence')\n",
    "plt.title('MelSpectrogramme')\n",
    "plt.colorbar(format='%+2.0f dB')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2f3a0465-fa56-47f4-9eaf-8125aefd9cf0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bed' 'bird' 'cat' 'dog' 'down' 'eight' 'five' 'four' 'go' 'happy'\n",
      " 'house' 'left' 'marvel' 'nine' 'no' 'off' 'on' 'one' 'right' 'seven'\n",
      " 'sheila' 'six' 'stop' 'three' 'tree' 'two' 'up' 'wow' 'yes' 'zero']\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import MultiLabelBinarizer\n",
    "mlb = MultiLabelBinarizer()\n",
    "\n",
    "mlb.fit(pd.Series(labels).fillna(\"missing\").str.split(', '))\n",
    "y_mlb = mlb.transform(pd.Series(labels).fillna(\"missing\").str.split(', '))\n",
    "print(mlb.classes_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2196d2e7-c059-4523-90e4-9d11c79f20be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([41849])\n"
     ]
    }
   ],
   "source": [
    "y_mlb = torch.tensor(y_mlb)\n",
    "#y_mlb_labels = torch.max(y_mlb, 1)[1]\n",
    "y_mlb_labels = torch.argmax(y_mlb, dim=1)\n",
    "print(y_mlb_labels.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b90adf4c-dad8-4cdc-8e4d-7588f012c0f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([ 0,  0,  0,  ..., 29, 29, 29])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_mlb_labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "769f74ed-4d35-45e0-a3e5-9ea2b2f34239",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train data :\n",
      "torch.Size([33479, 1, 64, 63])\n",
      "torch.Size([33479])\n",
      "********************\n",
      "Test data :\n",
      "torch.Size([8370, 1, 64, 63])\n",
      "torch.Size([8370])\n"
     ]
    }
   ],
   "source": [
    "# Diviser les données en ensembles d'entraînement et de test\n",
    "labels = np.array(labels)\n",
    "train_features, test_features, train_labels, test_labels = train_test_split(\n",
    "    spectrograms, y_mlb_labels, test_size=0.2, random_state=62)\n",
    "\n",
    "print(\"Train data :\")\n",
    "print(train_features.shape)\n",
    "print(train_labels.shape)\n",
    "print(\"*\"*20)\n",
    "print(\"Test data :\")\n",
    "print(test_features.shape)\n",
    "print(test_labels.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f7c04e6-fda9-4150-bde1-bfad1f94c504",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a85b935b-0d93-45e9-b73a-3dfb6d961e99",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Modèle CNN\n",
    "class SpeechCNN(torch.nn.Module):\n",
    "    def __init__(self, out_features):\n",
    "        super().__init__()\n",
    "\n",
    "        self.conv1 = torch.nn.Conv2d(in_channels=1, out_channels=8, kernel_size=2)\n",
    "        self.relu1 = torch.nn.ReLU()\n",
    "        self.pool1 = torch.nn.MaxPool2d(kernel_size=2, stride=2)\n",
    "\n",
    "        self.conv2 = torch.nn.Conv2d(in_channels=8, out_channels=16, kernel_size=2)\n",
    "        self.relu2 = torch.nn.ReLU()\n",
    "        self.pool2 = torch.nn.MaxPool2d(kernel_size=2, stride=2)\n",
    "\n",
    "        self.conv3 = torch.nn.Conv2d(in_channels=16, out_channels=32, kernel_size=2)\n",
    "        self.relu3 = torch.nn.ReLU()\n",
    "        self.pool3 = torch.nn.MaxPool2d(kernel_size=2, stride=2)\n",
    "        \n",
    "        # couches entièrement connectées\n",
    "        self.linear1 = torch.nn.Linear(in_features = 32* 7* 7, out_features = 150) # 250\n",
    "        self.relu4 = torch.nn.ReLU()\n",
    "        self.linear2 = torch.nn.Linear(in_features = 150, out_features = out_features)\n",
    "\n",
    "    def forward(self, x):\n",
    "        x = self.conv1(x)\n",
    "        x = self.relu1(x)\n",
    "        x = self.pool1(x)\n",
    "\n",
    "        x = self.conv2(x)\n",
    "        x = self.relu2(x)\n",
    "        x = self.pool2(x)\n",
    "\n",
    "        x = self.conv3(x)\n",
    "        x = self.relu3(x)\n",
    "        x = self.pool3(x)\n",
    "        #print(x.shape)\n",
    "\n",
    "        x = x.view(-1, 32* 7* 7) \n",
    "        x = self.linear1(x)\n",
    "        x = self.relu4(x)\n",
    "        x = self.linear2(x)\n",
    "\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5073a1b3-3c8f-4c3b-a0d3-c4358c157da0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******************************\n",
      "shape target : torch.Size([1, 30])\n",
      "shape input  : torch.Size([1, 64, 63])\n",
      "******************************\n",
      "shape output : torch.Size([1, 30])\n",
      "******************************\n"
     ]
    }
   ],
   "source": [
    "from torchsummary import summary\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "\n",
    "#input = torch.randn(1, 64, 98)\n",
    "input = torch.randn(1, 64, 63)\n",
    "\n",
    "# Instancier le modèle et le déplacer sur le GPU si disponible\n",
    "model = SpeechCNN(out_features=len(Classes))\n",
    "\n",
    "# Passe en avant\n",
    "output = model(input)\n",
    "#print(f\"Forme de la sortie : {output.size()}\")\n",
    "\n",
    "\n",
    "print(\"*\"*30)\n",
    "target = torch.randn(1, len(Classes))\n",
    "print(\"shape target :\",target.shape)\n",
    "print(\"shape input  :\", input.shape)\n",
    "print(\"*\"*30)\n",
    "print(\"shape output :\", output.shape)\n",
    "print(\"*\"*30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0ca37c6d-5b84-4c6e-9b66-26f43c361d02",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----------------------------------------------------------------\n",
      "        Layer (type)               Output Shape         Param #\n",
      "================================================================\n",
      "            Conv2d-1            [-1, 8, 63, 62]              40\n",
      "              ReLU-2            [-1, 8, 63, 62]               0\n",
      "         MaxPool2d-3            [-1, 8, 31, 31]               0\n",
      "            Conv2d-4           [-1, 16, 30, 30]             528\n",
      "              ReLU-5           [-1, 16, 30, 30]               0\n",
      "         MaxPool2d-6           [-1, 16, 15, 15]               0\n",
      "            Conv2d-7           [-1, 32, 14, 14]           2,080\n",
      "              ReLU-8           [-1, 32, 14, 14]               0\n",
      "         MaxPool2d-9             [-1, 32, 7, 7]               0\n",
      "           Linear-10                  [-1, 150]         235,350\n",
      "             ReLU-11                  [-1, 150]               0\n",
      "           Linear-12                   [-1, 30]           4,530\n",
      "================================================================\n",
      "Total params: 242,528\n",
      "Trainable params: 242,528\n",
      "Non-trainable params: 0\n",
      "----------------------------------------------------------------\n",
      "Input size (MB): 0.02\n",
      "Forward/backward pass size (MB): 0.89\n",
      "Params size (MB): 0.93\n",
      "Estimated Total Size (MB): 1.83\n",
      "----------------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "# Afficher le résumé du modèle\n",
    "summary(model, input_size=(1, 64, 63))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d8f7182d-af0f-4177-94c4-58dd4b9c359e",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 9.0.0 (20230911.1827)\n",
       " -->\n",
       "<!-- Pages: 1 -->\n",
       "<svg width=\"488pt\" height=\"875pt\"\n",
       " viewBox=\"0.00 0.00 488.14 875.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(0.703376 0.703376) rotate(0) translate(4 1240)\">\n",
       "<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-1240 690,-1240 690,4 -4,4\"/>\n",
       "<!-- 2479466194880 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>2479466194880</title>\n",
       "<polygon fill=\"#caff70\" stroke=\"black\" points=\"484,-32 420,-32 420,0 484,0 484,-32\"/>\n",
       "<text text-anchor=\"middle\" x=\"452\" y=\"-6.5\" font-family=\"monospace\" font-size=\"10.00\"> (1, 30)</text>\n",
       "</g>\n",
       "<!-- 2479550183552 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>2479550183552</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"502,-88 402,-88 402,-68 502,-68 502,-88\"/>\n",
       "<text text-anchor=\"middle\" x=\"452\" y=\"-74.5\" font-family=\"monospace\" font-size=\"10.00\">AddmmBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550183552&#45;&gt;2479466194880 -->\n",
       "<g id=\"edge40\" class=\"edge\">\n",
       "<title>2479550183552&#45;&gt;2479466194880</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M452,-67.62C452,-61.1 452,-52.05 452,-43.4\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"455.5,-43.65 452,-33.65 448.5,-43.65 455.5,-43.65\"/>\n",
       "</g>\n",
       "<!-- 2479550183072 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>2479550183072</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"387,-144 287,-144 287,-124 387,-124 387,-144\"/>\n",
       "<text text-anchor=\"middle\" x=\"337\" y=\"-130.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550183072&#45;&gt;2479550183552 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>2479550183072&#45;&gt;2479550183552</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M357.03,-123.59C374.81,-115.24 401.07,-102.92 421.46,-93.34\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"422.88,-96.54 430.44,-89.12 419.9,-90.21 422.88,-96.54\"/>\n",
       "</g>\n",
       "<!-- 2479466193840 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>2479466193840</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"381,-212 293,-212 293,-180 381,-180 381,-212\"/>\n",
       "<text text-anchor=\"middle\" x=\"337\" y=\"-198.5\" font-family=\"monospace\" font-size=\"10.00\">linear2.bias</text>\n",
       "<text text-anchor=\"middle\" x=\"337\" y=\"-186.5\" font-family=\"monospace\" font-size=\"10.00\"> (30)</text>\n",
       "</g>\n",
       "<!-- 2479466193840&#45;&gt;2479550183072 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>2479466193840&#45;&gt;2479550183072</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M337,-179.55C337,-172.34 337,-163.66 337,-155.88\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"340.5,-155.92 337,-145.92 333.5,-155.92 340.5,-155.92\"/>\n",
       "</g>\n",
       "<!-- 2479550184368 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>2479550184368</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"499,-144 405,-144 405,-124 499,-124 499,-144\"/>\n",
       "<text text-anchor=\"middle\" x=\"452\" y=\"-130.5\" font-family=\"monospace\" font-size=\"10.00\">ReluBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184368&#45;&gt;2479550183552 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>2479550184368&#45;&gt;2479550183552</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M452,-123.59C452,-117.01 452,-107.96 452,-99.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"455.5,-99.81 452,-89.81 448.5,-99.81 455.5,-99.81\"/>\n",
       "</g>\n",
       "<!-- 2479550184080 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>2479550184080</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"500,-206 400,-206 400,-186 500,-186 500,-206\"/>\n",
       "<text text-anchor=\"middle\" x=\"450\" y=\"-192.5\" font-family=\"monospace\" font-size=\"10.00\">AddmmBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184080&#45;&gt;2479550184368 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>2479550184080&#45;&gt;2479550184368</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M450.31,-185.62C450.58,-177.56 450.98,-165.65 451.32,-155.41\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"454.81,-155.74 451.65,-145.63 447.81,-155.5 454.81,-155.74\"/>\n",
       "</g>\n",
       "<!-- 2479550182928 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>2479550182928</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"341,-274 241,-274 241,-254 341,-254 341,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"291\" y=\"-260.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550182928&#45;&gt;2479550184080 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>2479550182928&#45;&gt;2479550184080</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M313.78,-253.54C340.82,-242.32 386.12,-223.52 417,-210.7\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"417.97,-214.09 425.86,-207.02 415.29,-207.62 417.97,-214.09\"/>\n",
       "</g>\n",
       "<!-- 2479466194960 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>2479466194960</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"314,-348 226,-348 226,-316 314,-316 314,-348\"/>\n",
       "<text text-anchor=\"middle\" x=\"270\" y=\"-334.5\" font-family=\"monospace\" font-size=\"10.00\">linear1.bias</text>\n",
       "<text text-anchor=\"middle\" x=\"270\" y=\"-322.5\" font-family=\"monospace\" font-size=\"10.00\"> (150)</text>\n",
       "</g>\n",
       "<!-- 2479466194960&#45;&gt;2479550182928 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>2479466194960&#45;&gt;2479550182928</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M274.87,-315.69C277.76,-306.6 281.47,-294.95 284.6,-285.12\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"287.88,-286.35 287.58,-275.76 281.21,-284.23 287.88,-286.35\"/>\n",
       "</g>\n",
       "<!-- 2479550184272 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>2479550184272</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"474,-274 380,-274 380,-254 474,-254 474,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"427\" y=\"-260.5\" font-family=\"monospace\" font-size=\"10.00\">ViewBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184272&#45;&gt;2479550184080 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>2479550184272&#45;&gt;2479550184080</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M430.3,-253.54C433.61,-244.04 438.82,-229.09 443.05,-216.95\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"446.23,-218.46 446.21,-207.87 439.62,-216.16 446.23,-218.46\"/>\n",
       "</g>\n",
       "<!-- 2479550185184 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>2479550185184</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"522,-342 332,-342 332,-322 522,-322 522,-342\"/>\n",
       "<text text-anchor=\"middle\" x=\"427\" y=\"-328.5\" font-family=\"monospace\" font-size=\"10.00\">MaxPool2DWithIndicesBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550185184&#45;&gt;2479550184272 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>2479550185184&#45;&gt;2479550184272</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M427,-321.54C427,-312.23 427,-297.7 427,-285.7\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"430.5,-285.95 427,-275.95 423.5,-285.95 430.5,-285.95\"/>\n",
       "</g>\n",
       "<!-- 2479550183360 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>2479550183360</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"474,-410 380,-410 380,-390 474,-390 474,-410\"/>\n",
       "<text text-anchor=\"middle\" x=\"427\" y=\"-396.5\" font-family=\"monospace\" font-size=\"10.00\">ReluBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550183360&#45;&gt;2479550185184 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>2479550183360&#45;&gt;2479550185184</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M427,-389.54C427,-380.23 427,-365.7 427,-353.7\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"430.5,-353.95 427,-343.95 423.5,-353.95 430.5,-353.95\"/>\n",
       "</g>\n",
       "<!-- 2479550184320 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>2479550184320</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"483,-472 371,-472 371,-452 483,-452 483,-472\"/>\n",
       "<text text-anchor=\"middle\" x=\"427\" y=\"-458.5\" font-family=\"monospace\" font-size=\"10.00\">SqueezeBackward1</text>\n",
       "</g>\n",
       "<!-- 2479550184320&#45;&gt;2479550183360 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>2479550184320&#45;&gt;2479550183360</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M427,-451.62C427,-443.56 427,-431.65 427,-421.41\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"430.5,-421.63 427,-411.63 423.5,-421.63 430.5,-421.63\"/>\n",
       "</g>\n",
       "<!-- 2479550183456 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>2479550183456</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"495,-528 359,-528 359,-508 495,-508 495,-528\"/>\n",
       "<text text-anchor=\"middle\" x=\"427\" y=\"-514.5\" font-family=\"monospace\" font-size=\"10.00\">ConvolutionBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550183456&#45;&gt;2479550184320 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>2479550183456&#45;&gt;2479550184320</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M427,-507.59C427,-501.01 427,-491.96 427,-483.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"430.5,-483.81 427,-473.81 423.5,-483.81 430.5,-483.81\"/>\n",
       "</g>\n",
       "<!-- 2479550184944 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>2479550184944</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"344,-584 220,-584 220,-564 344,-564 344,-584\"/>\n",
       "<text text-anchor=\"middle\" x=\"282\" y=\"-570.5\" font-family=\"monospace\" font-size=\"10.00\">UnsqueezeBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184944&#45;&gt;2479550183456 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>2479550184944&#45;&gt;2479550183456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M307.26,-563.59C330.4,-554.97 364.92,-542.12 390.96,-532.42\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"391.98,-535.78 400.13,-529.01 389.53,-529.22 391.98,-535.78\"/>\n",
       "</g>\n",
       "<!-- 2479550184752 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>2479550184752</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"361,-646 171,-646 171,-626 361,-626 361,-646\"/>\n",
       "<text text-anchor=\"middle\" x=\"266\" y=\"-632.5\" font-family=\"monospace\" font-size=\"10.00\">MaxPool2DWithIndicesBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184752&#45;&gt;2479550184944 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>2479550184752&#45;&gt;2479550184944</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M268.5,-625.62C270.67,-617.48 273.9,-605.39 276.65,-595.07\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"279.99,-596.14 279.18,-585.58 273.22,-594.34 279.99,-596.14\"/>\n",
       "</g>\n",
       "<!-- 2479550183648 -->\n",
       "<g id=\"node16\" class=\"node\">\n",
       "<title>2479550183648</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"313,-708 219,-708 219,-688 313,-688 313,-708\"/>\n",
       "<text text-anchor=\"middle\" x=\"266\" y=\"-694.5\" font-family=\"monospace\" font-size=\"10.00\">ReluBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550183648&#45;&gt;2479550184752 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>2479550183648&#45;&gt;2479550184752</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M266,-687.62C266,-679.56 266,-667.65 266,-657.41\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"269.5,-657.63 266,-647.63 262.5,-657.63 269.5,-657.63\"/>\n",
       "</g>\n",
       "<!-- 2479550184704 -->\n",
       "<g id=\"node17\" class=\"node\">\n",
       "<title>2479550184704</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"322,-764 210,-764 210,-744 322,-744 322,-764\"/>\n",
       "<text text-anchor=\"middle\" x=\"266\" y=\"-750.5\" font-family=\"monospace\" font-size=\"10.00\">SqueezeBackward1</text>\n",
       "</g>\n",
       "<!-- 2479550184704&#45;&gt;2479550183648 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>2479550184704&#45;&gt;2479550183648</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M266,-743.59C266,-737.01 266,-727.96 266,-719.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"269.5,-719.81 266,-709.81 262.5,-719.81 269.5,-719.81\"/>\n",
       "</g>\n",
       "<!-- 2479550184032 -->\n",
       "<g id=\"node18\" class=\"node\">\n",
       "<title>2479550184032</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"334,-820 198,-820 198,-800 334,-800 334,-820\"/>\n",
       "<text text-anchor=\"middle\" x=\"266\" y=\"-806.5\" font-family=\"monospace\" font-size=\"10.00\">ConvolutionBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184032&#45;&gt;2479550184704 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>2479550184032&#45;&gt;2479550184704</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M266,-799.59C266,-793.01 266,-783.96 266,-775.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"269.5,-775.81 266,-765.81 262.5,-775.81 269.5,-775.81\"/>\n",
       "</g>\n",
       "<!-- 2479550182256 -->\n",
       "<g id=\"node19\" class=\"node\">\n",
       "<title>2479550182256</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"185,-876 61,-876 61,-856 185,-856 185,-876\"/>\n",
       "<text text-anchor=\"middle\" x=\"123\" y=\"-862.5\" font-family=\"monospace\" font-size=\"10.00\">UnsqueezeBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550182256&#45;&gt;2479550184032 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>2479550182256&#45;&gt;2479550184032</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M147.91,-855.59C170.73,-846.97 204.78,-834.12 230.46,-824.42\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"231.36,-827.82 239.48,-821.01 228.89,-821.27 231.36,-827.82\"/>\n",
       "</g>\n",
       "<!-- 2479550183744 -->\n",
       "<g id=\"node20\" class=\"node\">\n",
       "<title>2479550183744</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"204,-938 14,-938 14,-918 204,-918 204,-938\"/>\n",
       "<text text-anchor=\"middle\" x=\"109\" y=\"-924.5\" font-family=\"monospace\" font-size=\"10.00\">MaxPool2DWithIndicesBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550183744&#45;&gt;2479550182256 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>2479550183744&#45;&gt;2479550182256</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M111.19,-917.62C113.09,-909.48 115.91,-897.39 118.32,-887.07\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"121.67,-888.12 120.53,-877.59 114.85,-886.53 121.67,-888.12\"/>\n",
       "</g>\n",
       "<!-- 2479550183840 -->\n",
       "<g id=\"node21\" class=\"node\">\n",
       "<title>2479550183840</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"156,-1000 62,-1000 62,-980 156,-980 156,-1000\"/>\n",
       "<text text-anchor=\"middle\" x=\"109\" y=\"-986.5\" font-family=\"monospace\" font-size=\"10.00\">ReluBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550183840&#45;&gt;2479550183744 -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>2479550183840&#45;&gt;2479550183744</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M109,-979.62C109,-971.56 109,-959.65 109,-949.41\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"112.5,-949.63 109,-939.63 105.5,-949.63 112.5,-949.63\"/>\n",
       "</g>\n",
       "<!-- 2479550182784 -->\n",
       "<g id=\"node22\" class=\"node\">\n",
       "<title>2479550182784</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"165,-1056 53,-1056 53,-1036 165,-1036 165,-1056\"/>\n",
       "<text text-anchor=\"middle\" x=\"109\" y=\"-1042.5\" font-family=\"monospace\" font-size=\"10.00\">SqueezeBackward1</text>\n",
       "</g>\n",
       "<!-- 2479550182784&#45;&gt;2479550183840 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>2479550182784&#45;&gt;2479550183840</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M109,-1035.59C109,-1029.01 109,-1019.96 109,-1011.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"112.5,-1011.81 109,-1001.81 105.5,-1011.81 112.5,-1011.81\"/>\n",
       "</g>\n",
       "<!-- 2479550182736 -->\n",
       "<g id=\"node23\" class=\"node\">\n",
       "<title>2479550182736</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"177,-1112 41,-1112 41,-1092 177,-1092 177,-1112\"/>\n",
       "<text text-anchor=\"middle\" x=\"109\" y=\"-1098.5\" font-family=\"monospace\" font-size=\"10.00\">ConvolutionBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550182736&#45;&gt;2479550182784 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>2479550182736&#45;&gt;2479550182784</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M109,-1091.59C109,-1085.01 109,-1075.96 109,-1067.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"112.5,-1067.81 109,-1057.81 105.5,-1067.81 112.5,-1067.81\"/>\n",
       "</g>\n",
       "<!-- 2479550182544 -->\n",
       "<g id=\"node24\" class=\"node\">\n",
       "<title>2479550182544</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"100,-1168 0,-1168 0,-1148 100,-1148 100,-1168\"/>\n",
       "<text text-anchor=\"middle\" x=\"50\" y=\"-1154.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550182544&#45;&gt;2479550182736 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>2479550182544&#45;&gt;2479550182736</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M60.28,-1147.59C68.57,-1140.01 80.45,-1129.13 90.4,-1120.02\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"92.71,-1122.65 97.72,-1113.32 87.98,-1117.49 92.71,-1122.65\"/>\n",
       "</g>\n",
       "<!-- 2479617806640 -->\n",
       "<g id=\"node25\" class=\"node\">\n",
       "<title>2479617806640</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"97,-1236 3,-1236 3,-1204 97,-1204 97,-1236\"/>\n",
       "<text text-anchor=\"middle\" x=\"50\" y=\"-1222.5\" font-family=\"monospace\" font-size=\"10.00\">conv1.weight</text>\n",
       "<text text-anchor=\"middle\" x=\"50\" y=\"-1210.5\" font-family=\"monospace\" font-size=\"10.00\"> (8, 1, 2, 2)</text>\n",
       "</g>\n",
       "<!-- 2479617806640&#45;&gt;2479550182544 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>2479617806640&#45;&gt;2479550182544</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M50,-1203.55C50,-1196.34 50,-1187.66 50,-1179.88\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"53.5,-1179.92 50,-1169.92 46.5,-1179.92 53.5,-1179.92\"/>\n",
       "</g>\n",
       "<!-- 2479550182880 -->\n",
       "<g id=\"node26\" class=\"node\">\n",
       "<title>2479550182880</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"218,-1168 118,-1168 118,-1148 218,-1148 218,-1168\"/>\n",
       "<text text-anchor=\"middle\" x=\"168\" y=\"-1154.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550182880&#45;&gt;2479550182736 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>2479550182880&#45;&gt;2479550182736</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M157.72,-1147.59C149.43,-1140.01 137.55,-1129.13 127.6,-1120.02\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"130.02,-1117.49 120.28,-1113.32 125.29,-1122.65 130.02,-1117.49\"/>\n",
       "</g>\n",
       "<!-- 2479617809840 -->\n",
       "<g id=\"node27\" class=\"node\">\n",
       "<title>2479617809840</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"206,-1236 130,-1236 130,-1204 206,-1204 206,-1236\"/>\n",
       "<text text-anchor=\"middle\" x=\"168\" y=\"-1222.5\" font-family=\"monospace\" font-size=\"10.00\">conv1.bias</text>\n",
       "<text text-anchor=\"middle\" x=\"168\" y=\"-1210.5\" font-family=\"monospace\" font-size=\"10.00\"> (8)</text>\n",
       "</g>\n",
       "<!-- 2479617809840&#45;&gt;2479550182880 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>2479617809840&#45;&gt;2479550182880</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M168,-1203.55C168,-1196.34 168,-1187.66 168,-1179.88\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"171.5,-1179.92 168,-1169.92 164.5,-1179.92 171.5,-1179.92\"/>\n",
       "</g>\n",
       "<!-- 2479550183120 -->\n",
       "<g id=\"node28\" class=\"node\">\n",
       "<title>2479550183120</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"316,-876 216,-876 216,-856 316,-856 316,-876\"/>\n",
       "<text text-anchor=\"middle\" x=\"266\" y=\"-862.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550183120&#45;&gt;2479550184032 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>2479550183120&#45;&gt;2479550184032</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M266,-855.59C266,-849.01 266,-839.96 266,-831.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"269.5,-831.81 266,-821.81 262.5,-831.81 269.5,-831.81\"/>\n",
       "</g>\n",
       "<!-- 2479617809520 -->\n",
       "<g id=\"node29\" class=\"node\">\n",
       "<title>2479617809520</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"322,-944 222,-944 222,-912 322,-912 322,-944\"/>\n",
       "<text text-anchor=\"middle\" x=\"272\" y=\"-930.5\" font-family=\"monospace\" font-size=\"10.00\">conv2.weight</text>\n",
       "<text text-anchor=\"middle\" x=\"272\" y=\"-918.5\" font-family=\"monospace\" font-size=\"10.00\"> (16, 8, 2, 2)</text>\n",
       "</g>\n",
       "<!-- 2479617809520&#45;&gt;2479550183120 -->\n",
       "<g id=\"edge27\" class=\"edge\">\n",
       "<title>2479617809520&#45;&gt;2479550183120</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M270.45,-911.55C269.73,-904.26 268.85,-895.45 268.06,-887.6\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"271.57,-887.52 267.09,-877.91 264.6,-888.21 271.57,-887.52\"/>\n",
       "</g>\n",
       "<!-- 2479550185280 -->\n",
       "<g id=\"node30\" class=\"node\">\n",
       "<title>2479550185280</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"434,-876 334,-876 334,-856 434,-856 434,-876\"/>\n",
       "<text text-anchor=\"middle\" x=\"384\" y=\"-862.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550185280&#45;&gt;2479550184032 -->\n",
       "<g id=\"edge28\" class=\"edge\">\n",
       "<title>2479550185280&#45;&gt;2479550184032</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M363.45,-855.59C345.12,-847.21 318.01,-834.8 297.04,-825.21\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"298.64,-822.09 288.09,-821.11 295.73,-828.45 298.64,-822.09\"/>\n",
       "</g>\n",
       "<!-- 2479466194640 -->\n",
       "<g id=\"node31\" class=\"node\">\n",
       "<title>2479466194640</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"422,-944 346,-944 346,-912 422,-912 422,-944\"/>\n",
       "<text text-anchor=\"middle\" x=\"384\" y=\"-930.5\" font-family=\"monospace\" font-size=\"10.00\">conv2.bias</text>\n",
       "<text text-anchor=\"middle\" x=\"384\" y=\"-918.5\" font-family=\"monospace\" font-size=\"10.00\"> (16)</text>\n",
       "</g>\n",
       "<!-- 2479466194640&#45;&gt;2479550185280 -->\n",
       "<g id=\"edge29\" class=\"edge\">\n",
       "<title>2479466194640&#45;&gt;2479550185280</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M384,-911.55C384,-904.34 384,-895.66 384,-887.88\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"387.5,-887.92 384,-877.92 380.5,-887.92 387.5,-887.92\"/>\n",
       "</g>\n",
       "<!-- 2479550184848 -->\n",
       "<g id=\"node32\" class=\"node\">\n",
       "<title>2479550184848</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"477,-584 377,-584 377,-564 477,-564 477,-584\"/>\n",
       "<text text-anchor=\"middle\" x=\"427\" y=\"-570.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550184848&#45;&gt;2479550183456 -->\n",
       "<g id=\"edge30\" class=\"edge\">\n",
       "<title>2479550184848&#45;&gt;2479550183456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M427,-563.59C427,-557.01 427,-547.96 427,-539.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"430.5,-539.81 427,-529.81 423.5,-539.81 430.5,-539.81\"/>\n",
       "</g>\n",
       "<!-- 2479466196000 -->\n",
       "<g id=\"node33\" class=\"node\">\n",
       "<title>2479466196000</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"485,-652 379,-652 379,-620 485,-620 485,-652\"/>\n",
       "<text text-anchor=\"middle\" x=\"432\" y=\"-638.5\" font-family=\"monospace\" font-size=\"10.00\">conv3.weight</text>\n",
       "<text text-anchor=\"middle\" x=\"432\" y=\"-626.5\" font-family=\"monospace\" font-size=\"10.00\"> (32, 16, 2, 2)</text>\n",
       "</g>\n",
       "<!-- 2479466196000&#45;&gt;2479550184848 -->\n",
       "<g id=\"edge31\" class=\"edge\">\n",
       "<title>2479466196000&#45;&gt;2479550184848</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M430.71,-619.55C430.1,-612.26 429.37,-603.45 428.72,-595.6\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"432.23,-595.59 427.91,-585.92 425.25,-596.17 432.23,-595.59\"/>\n",
       "</g>\n",
       "<!-- 2479550183168 -->\n",
       "<g id=\"node34\" class=\"node\">\n",
       "<title>2479550183168</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"595,-584 495,-584 495,-564 595,-564 595,-584\"/>\n",
       "<text text-anchor=\"middle\" x=\"545\" y=\"-570.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550183168&#45;&gt;2479550183456 -->\n",
       "<g id=\"edge32\" class=\"edge\">\n",
       "<title>2479550183168&#45;&gt;2479550183456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M524.45,-563.59C506.12,-555.21 479.01,-542.8 458.04,-533.21\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"459.64,-530.09 449.09,-529.11 456.73,-536.45 459.64,-530.09\"/>\n",
       "</g>\n",
       "<!-- 2479466195840 -->\n",
       "<g id=\"node35\" class=\"node\">\n",
       "<title>2479466195840</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"583,-652 507,-652 507,-620 583,-620 583,-652\"/>\n",
       "<text text-anchor=\"middle\" x=\"545\" y=\"-638.5\" font-family=\"monospace\" font-size=\"10.00\">conv3.bias</text>\n",
       "<text text-anchor=\"middle\" x=\"545\" y=\"-626.5\" font-family=\"monospace\" font-size=\"10.00\"> (32)</text>\n",
       "</g>\n",
       "<!-- 2479466195840&#45;&gt;2479550183168 -->\n",
       "<g id=\"edge33\" class=\"edge\">\n",
       "<title>2479466195840&#45;&gt;2479550183168</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M545,-619.55C545,-612.34 545,-603.66 545,-595.88\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"548.5,-595.92 545,-585.92 541.5,-595.92 548.5,-595.92\"/>\n",
       "</g>\n",
       "<!-- 2479550184560 -->\n",
       "<g id=\"node36\" class=\"node\">\n",
       "<title>2479550184560</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"568,-274 492,-274 492,-254 568,-254 568,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"530\" y=\"-260.5\" font-family=\"monospace\" font-size=\"10.00\">TBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184560&#45;&gt;2479550184080 -->\n",
       "<g id=\"edge34\" class=\"edge\">\n",
       "<title>2479550184560&#45;&gt;2479550184080</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M518.54,-253.54C505.94,-243.15 485.47,-226.27 470.18,-213.65\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"472.55,-211.07 462.61,-207.4 468.09,-216.47 472.55,-211.07\"/>\n",
       "</g>\n",
       "<!-- 2479550184656 -->\n",
       "<g id=\"node37\" class=\"node\">\n",
       "<title>2479550184656</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"640,-342 540,-342 540,-322 640,-322 640,-342\"/>\n",
       "<text text-anchor=\"middle\" x=\"590\" y=\"-328.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550184656&#45;&gt;2479550184560 -->\n",
       "<g id=\"edge35\" class=\"edge\">\n",
       "<title>2479550184656&#45;&gt;2479550184560</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M581.4,-321.54C572.23,-311.45 557.47,-295.22 546.12,-282.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"548.92,-280.6 539.6,-275.56 543.74,-285.31 548.92,-280.6\"/>\n",
       "</g>\n",
       "<!-- 2479466194160 -->\n",
       "<g id=\"node38\" class=\"node\">\n",
       "<title>2479466194160</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"640,-416 540,-416 540,-384 640,-384 640,-416\"/>\n",
       "<text text-anchor=\"middle\" x=\"590\" y=\"-402.5\" font-family=\"monospace\" font-size=\"10.00\">linear1.weight</text>\n",
       "<text text-anchor=\"middle\" x=\"590\" y=\"-390.5\" font-family=\"monospace\" font-size=\"10.00\"> (150, 1568)</text>\n",
       "</g>\n",
       "<!-- 2479466194160&#45;&gt;2479550184656 -->\n",
       "<g id=\"edge36\" class=\"edge\">\n",
       "<title>2479466194160&#45;&gt;2479550184656</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M590,-383.69C590,-374.8 590,-363.46 590,-353.77\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"593.5,-353.83 590,-343.83 586.5,-353.83 593.5,-353.83\"/>\n",
       "</g>\n",
       "<!-- 2479550184416 -->\n",
       "<g id=\"node39\" class=\"node\">\n",
       "<title>2479550184416</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"622,-144 546,-144 546,-124 622,-124 622,-144\"/>\n",
       "<text text-anchor=\"middle\" x=\"584\" y=\"-130.5\" font-family=\"monospace\" font-size=\"10.00\">TBackward0</text>\n",
       "</g>\n",
       "<!-- 2479550184416&#45;&gt;2479550183552 -->\n",
       "<g id=\"edge37\" class=\"edge\">\n",
       "<title>2479550184416&#45;&gt;2479550183552</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M561.01,-123.59C540.22,-115.09 509.35,-102.46 485.76,-92.81\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"487.15,-89.6 476.57,-89.05 484.5,-96.08 487.15,-89.6\"/>\n",
       "</g>\n",
       "<!-- 2479550183264 -->\n",
       "<g id=\"node40\" class=\"node\">\n",
       "<title>2479550183264</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"663,-206 563,-206 563,-186 663,-186 663,-206\"/>\n",
       "<text text-anchor=\"middle\" x=\"613\" y=\"-192.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 2479550183264&#45;&gt;2479550184416 -->\n",
       "<g id=\"edge38\" class=\"edge\">\n",
       "<title>2479550183264&#45;&gt;2479550184416</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M608.47,-185.62C604.44,-177.3 598.43,-164.86 593.38,-154.4\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"596.57,-152.96 589.06,-145.48 590.26,-156 596.57,-152.96\"/>\n",
       "</g>\n",
       "<!-- 2479466194800 -->\n",
       "<g id=\"node41\" class=\"node\">\n",
       "<title>2479466194800</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"686,-280 586,-280 586,-248 686,-248 686,-280\"/>\n",
       "<text text-anchor=\"middle\" x=\"636\" y=\"-266.5\" font-family=\"monospace\" font-size=\"10.00\">linear2.weight</text>\n",
       "<text text-anchor=\"middle\" x=\"636\" y=\"-254.5\" font-family=\"monospace\" font-size=\"10.00\"> (30, 150)</text>\n",
       "</g>\n",
       "<!-- 2479466194800&#45;&gt;2479550183264 -->\n",
       "<g id=\"edge39\" class=\"edge\">\n",
       "<title>2479466194800&#45;&gt;2479550183264</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M630.67,-247.69C627.5,-238.6 623.44,-226.95 620.01,-217.12\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"623.34,-216.04 616.74,-207.75 616.73,-218.34 623.34,-216.04\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.graphs.Digraph at 0x24150b53e50>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from torchviz import make_dot\n",
    "# Visualiser le graphique computationnel\n",
    "dot = make_dot(output, params=dict(model.named_parameters()))\n",
    "dot.render(\"model_graph\", format=\"png\")\n",
    "#dot.render(\"model_graph\")  # Enregistre le graphique au format PDF\n",
    "dot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc103024-2db8-4c9a-8d72-7c85cfd79caa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "39d931c7-5090-4907-9629-bbf033f0ab51",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([75, 1, 64, 63])\n",
      "torch.Size([75])\n"
     ]
    }
   ],
   "source": [
    "# Create DataLoader\n",
    "train_dataset = torch.utils.data.TensorDataset(train_features, train_labels)\n",
    "train_loader = torch.utils.data.DataLoader(dataset=train_dataset, \n",
    "                                           batch_size=75, shuffle=True)\n",
    "\n",
    "val_dataset = torch.utils.data.TensorDataset(test_features, test_labels)\n",
    "val_loader = torch.utils.data.DataLoader(dataset=val_dataset,\n",
    "                                         batch_size=75, shuffle=False)\n",
    "\n",
    "# Les los de données\n",
    "it = iter(train_loader)\n",
    "audio, targets = next(it)\n",
    "print(audio.shape)\n",
    "print(targets.shape)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d262c096-b4af-4c55-9961-853a614f4841",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Déplacez le modèle sur le GPU s'il est disponible\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "model.to(device)\n",
    "\n",
    "# Define loss function and optimizer\n",
    "criterion = nn.CrossEntropyLoss()\n",
    "optimizer = optim.Adam(model.parameters(), lr=0.001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "64b6b3f3-b51c-4f61-93c1-bdcdcedb2c80",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch [1/30], Train Loss average = [2.482499026878835]\n",
      "Epoch [2/30], Train Loss average = [1.0573488949929308]\n",
      "Epoch [3/30], Train Loss average = [0.638832214294664]\n",
      "Epoch [4/30], Train Loss average = [0.4707037594827763]\n",
      "Epoch [5/30], Train Loss average = [0.3842965276449319]\n",
      "Epoch [6/30], Train Loss average = [0.325947203125463]\n",
      "Epoch [7/30], Train Loss average = [0.2809759122579957]\n",
      "Epoch [8/30], Train Loss average = [0.25035066880969126]\n",
      "Epoch [9/30], Train Loss average = [0.22398962445507115]\n",
      "Epoch [10/30], Train Loss average = [0.20286118129989178]\n",
      "Epoch [11/30], Train Loss average = [0.18454575721149477]\n",
      "Epoch [12/30], Train Loss average = [0.1728283601335898]\n",
      "Epoch [13/30], Train Loss average = [0.16552094248450575]\n",
      "Epoch [14/30], Train Loss average = [0.14996340827937227]\n",
      "Epoch [15/30], Train Loss average = [0.15111633614372352]\n",
      "Epoch [16/30], Train Loss average = [0.13377212185487652]\n",
      "Epoch [17/30], Train Loss average = [0.1262930063926667]\n",
      "Epoch [18/30], Train Loss average = [0.1242541984407027]\n",
      "Epoch [19/30], Train Loss average = [0.10685264236675013]\n",
      "Epoch [20/30], Train Loss average = [0.10999787103184717]\n",
      "Epoch [21/30], Train Loss average = [0.09570835268654146]\n",
      "Epoch [22/30], Train Loss average = [0.09472607657255008]\n",
      "Epoch [23/30], Train Loss average = [0.0973784355571706]\n",
      "Epoch [24/30], Train Loss average = [0.09345017181880255]\n",
      "Epoch [25/30], Train Loss average = [0.09015108519014996]\n",
      "Epoch [26/30], Train Loss average = [0.07916704379542995]\n",
      "Epoch [27/30], Train Loss average = [0.07500681745292623]\n",
      "Epoch [28/30], Train Loss average = [0.07410113843287064]\n",
      "Epoch [29/30], Train Loss average = [0.08723834343879615]\n",
      "Epoch [30/30], Train Loss average = [0.060779731782149085]\n"
     ]
    }
   ],
   "source": [
    "# Training loop\n",
    "num_epochs = 30\n",
    "train_losses = []\n",
    "for epoch in range(num_epochs):\n",
    "    train_total_loss = 0.0  # Réinitialisation de la perte totale pour chaque époque\n",
    "    for inputs, targets in train_loader:    \n",
    "        # Déplacez les données d'entrée et les cibles sur le même périphérique que le modèle\n",
    "        inputs, targets = inputs.to(device), targets.to(device)\n",
    "        outputs = model(inputs)\n",
    "        # Calculer la perte\n",
    "        loss = criterion(outputs, targets)\n",
    "        train_total_loss += loss.item()\n",
    "        \n",
    "        # Rétropropagation et mise à jour des poids\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        # Réinitialiser les gradients\n",
    "        optimizer.zero_grad()\n",
    "\n",
    "    # Afficher la perte moyenne de l'époque\n",
    "    average_loss = train_total_loss / len(train_loader)\n",
    "    train_losses.append(average_loss)\n",
    "    print(f\"Epoch [{epoch + 1}/{num_epochs}], Train Loss average = [{average_loss}]\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "6a909e79-1ab4-43e0-8a6d-81b77e262ba3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sur les 8370 audios de test, 8049 ont été reconus par le modèle\n",
      "Accuracy test  : 0.9616487622261047\n"
     ]
    }
   ],
   "source": [
    "model.eval()\n",
    "predictions = []\n",
    "targets_list = []\n",
    "n_tot_test = 0\n",
    "nb_correct_test = 0\n",
    "\n",
    "with torch.no_grad():\n",
    "    for data, targets in val_loader:\n",
    "        pred = model(data)\n",
    "        pred_class = torch.argmax(pred, dim=1)\n",
    "        # Ajouter les prédictions et les cibles aux listes\n",
    "        predictions.extend(pred_class.tolist())\n",
    "        targets_list.extend(targets.tolist())\n",
    "        \n",
    "        nb_correct_test += torch.sum(pred_class == targets)\n",
    "        n_tot_test += data.shape[0]\n",
    "        \n",
    "    acc_test = nb_correct_test / n_tot_test    \n",
    "    print(f\"Sur les {n_tot_test} audios de test, {nb_correct_test} ont été reconus par le modèle\")\n",
    "    print(f\"Accuracy test  : {acc_test.item()}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "48b44d25-1957-44be-ac0f-521976aa988e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Tracer la courbe d'apprentissage\n",
    "plt.plot(range(num_epochs), train_losses, label='Train Loss',\n",
    "         color='blue', linestyle='-')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Loss')\n",
    "plt.title(\"Courbe d'apprentissage\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Ajouter un fond de couleur\n",
    "plt.savefig('Ec.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "0379d4df-0325-4337-a9ba-9ac1d9aba507",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[6,\n",
       " 11,\n",
       " 6,\n",
       " 11,\n",
       " 2,\n",
       " 19,\n",
       " 5,\n",
       " 7,\n",
       " 2,\n",
       " 20,\n",
       " 22,\n",
       " 8,\n",
       " 24,\n",
       " 11,\n",
       " 7,\n",
       " 0,\n",
       " 28,\n",
       " 5,\n",
       " 10,\n",
       " 1,\n",
       " 18,\n",
       " 19,\n",
       " 16,\n",
       " 15,\n",
       " 21,\n",
       " 19,\n",
       " 22,\n",
       " 26,\n",
       " 7,\n",
       " 11,\n",
       " 11,\n",
       " 14,\n",
       " 15,\n",
       " 7,\n",
       " 29,\n",
       " 6,\n",
       " 1,\n",
       " 10,\n",
       " 9,\n",
       " 7,\n",
       " 12,\n",
       " 29,\n",
       " 16,\n",
       " 24,\n",
       " 19,\n",
       " 7,\n",
       " 26,\n",
       " 24,\n",
       " 11,\n",
       " 16,\n",
       " 29,\n",
       " 7,\n",
       " 7,\n",
       " 17,\n",
       " 23,\n",
       " 17,\n",
       " 29,\n",
       " 4,\n",
       " 0,\n",
       " 4,\n",
       " 28,\n",
       " 8,\n",
       " 15,\n",
       " 7,\n",
       " 11,\n",
       " 3,\n",
       " 18,\n",
       " 24,\n",
       " 2,\n",
       " 15,\n",
       " 13,\n",
       " 22,\n",
       " 3,\n",
       " 16,\n",
       " 26,\n",
       " 26,\n",
       " 15,\n",
       " 11,\n",
       " 26,\n",
       " 19,\n",
       " 22,\n",
       " 24,\n",
       " 1,\n",
       " 14,\n",
       " 7,\n",
       " 6,\n",
       " 7,\n",
       " 0,\n",
       " 15,\n",
       " 28,\n",
       " 16,\n",
       " 28,\n",
       " 15,\n",
       " 2,\n",
       " 19,\n",
       " 20,\n",
       " 9,\n",
       " 2,\n",
       " 15,\n",
       " 11,\n",
       " 21,\n",
       " 7,\n",
       " 22,\n",
       " 29,\n",
       " 11,\n",
       " 18,\n",
       " 21,\n",
       " 18,\n",
       " 7,\n",
       " 29,\n",
       " 28,\n",
       " 7,\n",
       " 14,\n",
       " 29,\n",
       " 26,\n",
       " 20,\n",
       " 7,\n",
       " 0,\n",
       " 29,\n",
       " 25,\n",
       " 19,\n",
       " 5,\n",
       " 7,\n",
       " 9,\n",
       " 23,\n",
       " 10,\n",
       " 11,\n",
       " 15,\n",
       " 1,\n",
       " 7,\n",
       " 10,\n",
       " 9,\n",
       " 4,\n",
       " 10,\n",
       " 0,\n",
       " 4,\n",
       " 10,\n",
       " 15,\n",
       " 7,\n",
       " 15,\n",
       " 7,\n",
       " 29,\n",
       " 21,\n",
       " 10,\n",
       " 17,\n",
       " 9,\n",
       " 16,\n",
       " 21,\n",
       " 16,\n",
       " 10,\n",
       " 10,\n",
       " 20,\n",
       " 12,\n",
       " 16,\n",
       " 7,\n",
       " 0,\n",
       " 5,\n",
       " 18,\n",
       " 9,\n",
       " 6,\n",
       " 28,\n",
       " 15,\n",
       " 19,\n",
       " 23,\n",
       " 8,\n",
       " 7,\n",
       " 17,\n",
       " 7,\n",
       " 11,\n",
       " 6,\n",
       " 19,\n",
       " 7,\n",
       " 2,\n",
       " 2,\n",
       " 0,\n",
       " 5,\n",
       " 19,\n",
       " 10,\n",
       " 28,\n",
       " 13,\n",
       " 14,\n",
       " 14,\n",
       " 21,\n",
       " 28,\n",
       " 10,\n",
       " 3,\n",
       " 19,\n",
       " 5,\n",
       " 20,\n",
       " 5,\n",
       " 25,\n",
       " 26,\n",
       " 16,\n",
       " 15,\n",
       " 25,\n",
       " 15,\n",
       " 21,\n",
       " 6,\n",
       " 25,\n",
       " 28,\n",
       " 29,\n",
       " 21,\n",
       " 29,\n",
       " 3,\n",
       " 17,\n",
       " 26,\n",
       " 9,\n",
       " 20,\n",
       " 10,\n",
       " 4,\n",
       " 23,\n",
       " 20,\n",
       " 25,\n",
       " 12,\n",
       " 22,\n",
       " 23,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 12,\n",
       " 7,\n",
       " 28,\n",
       " 17,\n",
       " 17,\n",
       " 21,\n",
       " 0,\n",
       " 19,\n",
       " 8,\n",
       " 3,\n",
       " 7,\n",
       " 24,\n",
       " 2,\n",
       " 27,\n",
       " 24,\n",
       " 21,\n",
       " 1,\n",
       " 24,\n",
       " 7,\n",
       " 29,\n",
       " 1,\n",
       " 17,\n",
       " 29,\n",
       " 12,\n",
       " 27,\n",
       " 12,\n",
       " 7,\n",
       " 0,\n",
       " 25,\n",
       " 15,\n",
       " 15,\n",
       " 8,\n",
       " 7,\n",
       " 17,\n",
       " 19,\n",
       " 11,\n",
       " 17,\n",
       " 22,\n",
       " 13,\n",
       " 21,\n",
       " 8,\n",
       " 11,\n",
       " 22,\n",
       " 24,\n",
       " 13,\n",
       " 16,\n",
       " 23,\n",
       " 12,\n",
       " 29,\n",
       " 2,\n",
       " 12,\n",
       " 7,\n",
       " 7,\n",
       " 25,\n",
       " 20,\n",
       " 6,\n",
       " 1,\n",
       " 4,\n",
       " 5,\n",
       " 22,\n",
       " 10,\n",
       " 9,\n",
       " 0,\n",
       " 23,\n",
       " 19,\n",
       " 25,\n",
       " 7,\n",
       " 4,\n",
       " 7,\n",
       " 16,\n",
       " 1,\n",
       " 23,\n",
       " 20,\n",
       " 16,\n",
       " 24,\n",
       " 16,\n",
       " 11,\n",
       " 2,\n",
       " 20,\n",
       " 11,\n",
       " 15,\n",
       " 16,\n",
       " 3,\n",
       " 15,\n",
       " 19,\n",
       " 23,\n",
       " 11,\n",
       " 17,\n",
       " 7,\n",
       " 16,\n",
       " 3,\n",
       " 28,\n",
       " 28,\n",
       " 18,\n",
       " 19,\n",
       " 11,\n",
       " 26,\n",
       " 13,\n",
       " 22,\n",
       " 0,\n",
       " 13,\n",
       " 12,\n",
       " 29,\n",
       " 22,\n",
       " 26,\n",
       " 20,\n",
       " 24,\n",
       " 29,\n",
       " 21,\n",
       " 20,\n",
       " 4,\n",
       " 18,\n",
       " 28,\n",
       " 9,\n",
       " 2,\n",
       " 23,\n",
       " 17,\n",
       " 22,\n",
       " 7,\n",
       " 12,\n",
       " 29,\n",
       " 29,\n",
       " 23,\n",
       " 13,\n",
       " 16,\n",
       " 18,\n",
       " 27,\n",
       " 12,\n",
       " 17,\n",
       " 3,\n",
       " 15,\n",
       " 11,\n",
       " 1,\n",
       " 0,\n",
       " 26,\n",
       " 18,\n",
       " 11,\n",
       " 10,\n",
       " 10,\n",
       " 20,\n",
       " 18,\n",
       " 9,\n",
       " 7,\n",
       " 9,\n",
       " 2,\n",
       " 24,\n",
       " 14,\n",
       " 23,\n",
       " 9,\n",
       " 19,\n",
       " 2,\n",
       " 10,\n",
       " 12,\n",
       " 15,\n",
       " 2,\n",
       " 17,\n",
       " 24,\n",
       " 22,\n",
       " 6,\n",
       " 20,\n",
       " 12,\n",
       " 27,\n",
       " 5,\n",
       " 9,\n",
       " 1,\n",
       " 7,\n",
       " 13,\n",
       " 0,\n",
       " 12,\n",
       " 11,\n",
       " 2,\n",
       " 18,\n",
       " 5,\n",
       " 0,\n",
       " 15,\n",
       " 10,\n",
       " 18,\n",
       " 7,\n",
       " 17,\n",
       " 21,\n",
       " 11,\n",
       " 2,\n",
       " 21,\n",
       " 7,\n",
       " 1,\n",
       " 9,\n",
       " 6,\n",
       " 5,\n",
       " 9,\n",
       " 22,\n",
       " 9,\n",
       " 8,\n",
       " 2,\n",
       " 28,\n",
       " 20,\n",
       " 4,\n",
       " 6,\n",
       " 21,\n",
       " 9,\n",
       " 5,\n",
       " 25,\n",
       " 16,\n",
       " 10,\n",
       " 23,\n",
       " 25,\n",
       " 1,\n",
       " 19,\n",
       " 28,\n",
       " 13,\n",
       " 18,\n",
       " 28,\n",
       " 0,\n",
       " 16,\n",
       " 16,\n",
       " 20,\n",
       " 18,\n",
       " 0,\n",
       " 10,\n",
       " 10,\n",
       " 25,\n",
       " 9,\n",
       " 20,\n",
       " 1,\n",
       " 18,\n",
       " 16,\n",
       " 2,\n",
       " 24,\n",
       " 18,\n",
       " 24,\n",
       " 16,\n",
       " 2,\n",
       " 21,\n",
       " 0,\n",
       " 10,\n",
       " 16,\n",
       " 4,\n",
       " 19,\n",
       " 24,\n",
       " 0,\n",
       " 16,\n",
       " 18,\n",
       " 26,\n",
       " 20,\n",
       " 16,\n",
       " 11,\n",
       " 12,\n",
       " 12,\n",
       " 19,\n",
       " 15,\n",
       " 2,\n",
       " 0,\n",
       " 19,\n",
       " 2,\n",
       " 3,\n",
       " 17,\n",
       " 27,\n",
       " 10,\n",
       " 6,\n",
       " 6,\n",
       " 12,\n",
       " 19,\n",
       " 7,\n",
       " 25,\n",
       " 9,\n",
       " 12,\n",
       " 23,\n",
       " 16,\n",
       " 20,\n",
       " 4,\n",
       " 11,\n",
       " 7,\n",
       " 10,\n",
       " 16,\n",
       " 15,\n",
       " 1,\n",
       " 28,\n",
       " 2,\n",
       " 22,\n",
       " 0,\n",
       " 1,\n",
       " 10,\n",
       " 19,\n",
       " 19,\n",
       " 13,\n",
       " 22,\n",
       " 0,\n",
       " 21,\n",
       " 13,\n",
       " 11,\n",
       " 8,\n",
       " 27,\n",
       " 14,\n",
       " 21,\n",
       " 22,\n",
       " 2,\n",
       " 0,\n",
       " 26,\n",
       " 8,\n",
       " 8,\n",
       " 24,\n",
       " 3,\n",
       " 23,\n",
       " 17,\n",
       " 16,\n",
       " 26,\n",
       " 7,\n",
       " 0,\n",
       " 24,\n",
       " 7,\n",
       " 15,\n",
       " 16,\n",
       " 25,\n",
       " 24,\n",
       " 6,\n",
       " 26,\n",
       " 11,\n",
       " 10,\n",
       " 15,\n",
       " 1,\n",
       " 8,\n",
       " 13,\n",
       " 10,\n",
       " 16,\n",
       " 18,\n",
       " 7,\n",
       " 25,\n",
       " 3,\n",
       " 8,\n",
       " 14,\n",
       " 1,\n",
       " 25,\n",
       " 16,\n",
       " 24,\n",
       " 28,\n",
       " 16,\n",
       " 10,\n",
       " 10,\n",
       " 10,\n",
       " 9,\n",
       " 11,\n",
       " 7,\n",
       " 10,\n",
       " 27,\n",
       " 26,\n",
       " 22,\n",
       " 25,\n",
       " 1,\n",
       " 7,\n",
       " 23,\n",
       " 8,\n",
       " 19,\n",
       " 2,\n",
       " 14,\n",
       " 3,\n",
       " 5,\n",
       " 9,\n",
       " 5,\n",
       " 16,\n",
       " 19,\n",
       " 21,\n",
       " 5,\n",
       " 16,\n",
       " 26,\n",
       " 3,\n",
       " 5,\n",
       " 2,\n",
       " 12,\n",
       " 26,\n",
       " 1,\n",
       " 7,\n",
       " 12,\n",
       " 1,\n",
       " 23,\n",
       " 11,\n",
       " 7,\n",
       " 0,\n",
       " 26,\n",
       " 1,\n",
       " 26,\n",
       " 25,\n",
       " 3,\n",
       " 10,\n",
       " 11,\n",
       " 17,\n",
       " 27,\n",
       " 17,\n",
       " 21,\n",
       " 10,\n",
       " 24,\n",
       " 26,\n",
       " 15,\n",
       " 17,\n",
       " 5,\n",
       " 10,\n",
       " 13,\n",
       " 13,\n",
       " 27,\n",
       " 27,\n",
       " 10,\n",
       " 28,\n",
       " 6,\n",
       " 29,\n",
       " 1,\n",
       " 21,\n",
       " 15,\n",
       " 7,\n",
       " 10,\n",
       " 20,\n",
       " 28,\n",
       " 2,\n",
       " 22,\n",
       " 11,\n",
       " 25,\n",
       " 21,\n",
       " 3,\n",
       " 18,\n",
       " 10,\n",
       " 11,\n",
       " 3,\n",
       " 12,\n",
       " 24,\n",
       " 24,\n",
       " 26,\n",
       " 13,\n",
       " 27,\n",
       " 16,\n",
       " 10,\n",
       " 24,\n",
       " 21,\n",
       " 7,\n",
       " 0,\n",
       " 19,\n",
       " 26,\n",
       " 21,\n",
       " 0,\n",
       " 17,\n",
       " 4,\n",
       " 15,\n",
       " 13,\n",
       " 5,\n",
       " 13,\n",
       " 7,\n",
       " 14,\n",
       " 21,\n",
       " 12,\n",
       " 7,\n",
       " 15,\n",
       " 10,\n",
       " 6,\n",
       " 23,\n",
       " 10,\n",
       " 16,\n",
       " 7,\n",
       " 14,\n",
       " 7,\n",
       " 7,\n",
       " 1,\n",
       " 1,\n",
       " 10,\n",
       " 7,\n",
       " 15,\n",
       " 9,\n",
       " 26,\n",
       " 0,\n",
       " 21,\n",
       " 6,\n",
       " 8,\n",
       " 11,\n",
       " 24,\n",
       " 9,\n",
       " 1,\n",
       " 7,\n",
       " 9,\n",
       " 16,\n",
       " 13,\n",
       " 17,\n",
       " 7,\n",
       " 16,\n",
       " 17,\n",
       " 17,\n",
       " 9,\n",
       " 8,\n",
       " 17,\n",
       " 29,\n",
       " 24,\n",
       " 13,\n",
       " 15,\n",
       " 15,\n",
       " 7,\n",
       " 13,\n",
       " 8,\n",
       " 23,\n",
       " 27,\n",
       " 28,\n",
       " 22,\n",
       " 22,\n",
       " 19,\n",
       " 7,\n",
       " 15,\n",
       " 10,\n",
       " 6,\n",
       " 19,\n",
       " 7,\n",
       " 7,\n",
       " 22,\n",
       " 7,\n",
       " 3,\n",
       " 28,\n",
       " 16,\n",
       " 26,\n",
       " 10,\n",
       " 0,\n",
       " 22,\n",
       " 0,\n",
       " 14,\n",
       " 19,\n",
       " 14,\n",
       " 12,\n",
       " 4,\n",
       " 2,\n",
       " 27,\n",
       " 25,\n",
       " 4,\n",
       " 0,\n",
       " 5,\n",
       " 19,\n",
       " 7,\n",
       " 13,\n",
       " 10,\n",
       " 16,\n",
       " 14,\n",
       " 28,\n",
       " 26,\n",
       " 15,\n",
       " 11,\n",
       " 7,\n",
       " 13,\n",
       " 13,\n",
       " 11,\n",
       " 7,\n",
       " 22,\n",
       " 1,\n",
       " 7,\n",
       " 1,\n",
       " 10,\n",
       " 24,\n",
       " 12,\n",
       " 5,\n",
       " 25,\n",
       " 6,\n",
       " 18,\n",
       " 5,\n",
       " 25,\n",
       " 1,\n",
       " 10,\n",
       " 18,\n",
       " 18,\n",
       " 1,\n",
       " 2,\n",
       " 5,\n",
       " 21,\n",
       " 18,\n",
       " 7,\n",
       " 16,\n",
       " 20,\n",
       " 7,\n",
       " 6,\n",
       " 16,\n",
       " 5,\n",
       " 11,\n",
       " 18,\n",
       " 0,\n",
       " 24,\n",
       " 10,\n",
       " 17,\n",
       " 20,\n",
       " 2,\n",
       " 25,\n",
       " 26,\n",
       " 7,\n",
       " 10,\n",
       " 29,\n",
       " 13,\n",
       " 3,\n",
       " 25,\n",
       " 17,\n",
       " 6,\n",
       " 28,\n",
       " 10,\n",
       " 3,\n",
       " 3,\n",
       " 1,\n",
       " 13,\n",
       " 25,\n",
       " 29,\n",
       " 22,\n",
       " 22,\n",
       " 2,\n",
       " 12,\n",
       " 2,\n",
       " 15,\n",
       " 20,\n",
       " 29,\n",
       " 11,\n",
       " 15,\n",
       " 28,\n",
       " 17,\n",
       " 0,\n",
       " 20,\n",
       " 16,\n",
       " 28,\n",
       " 5,\n",
       " 20,\n",
       " 18,\n",
       " 9,\n",
       " 27,\n",
       " 7,\n",
       " 15,\n",
       " 21,\n",
       " 20,\n",
       " 20,\n",
       " 14,\n",
       " 3,\n",
       " 13,\n",
       " 26,\n",
       " 0,\n",
       " 5,\n",
       " 19,\n",
       " 21,\n",
       " 21,\n",
       " 19,\n",
       " 5,\n",
       " 15,\n",
       " 11,\n",
       " 10,\n",
       " 7,\n",
       " 12,\n",
       " 22,\n",
       " 1,\n",
       " 2,\n",
       " 26,\n",
       " 24,\n",
       " 23,\n",
       " 7,\n",
       " 20,\n",
       " 3,\n",
       " 24,\n",
       " 4,\n",
       " 2,\n",
       " 15,\n",
       " 29,\n",
       " 1,\n",
       " 16,\n",
       " 5,\n",
       " 27,\n",
       " 2,\n",
       " 27,\n",
       " 16,\n",
       " 3,\n",
       " 3,\n",
       " 23,\n",
       " 18,\n",
       " 2,\n",
       " 2,\n",
       " 15,\n",
       " 2,\n",
       " 15,\n",
       " 22,\n",
       " 23,\n",
       " 9,\n",
       " 0,\n",
       " 25,\n",
       " 2,\n",
       " 14,\n",
       " 11,\n",
       " 21,\n",
       " 23,\n",
       " 13,\n",
       " 28,\n",
       " 26,\n",
       " 19,\n",
       " 19,\n",
       " 7,\n",
       " 23,\n",
       " 29,\n",
       " 6,\n",
       " 17,\n",
       " 7,\n",
       " 0,\n",
       " 11,\n",
       " 29,\n",
       " 5,\n",
       " 16,\n",
       " 3,\n",
       " 29,\n",
       " 9,\n",
       " 3,\n",
       " 13,\n",
       " 26,\n",
       " 28,\n",
       " 28,\n",
       " 15,\n",
       " 4,\n",
       " 27,\n",
       " 10,\n",
       " 29,\n",
       " 21,\n",
       " 22,\n",
       " 8,\n",
       " 9,\n",
       " 11,\n",
       " 16,\n",
       " 27,\n",
       " 16,\n",
       " 16,\n",
       " 3,\n",
       " 11,\n",
       " 7,\n",
       " 4,\n",
       " 13,\n",
       " 29,\n",
       " 7,\n",
       " 15,\n",
       " 15,\n",
       " 24,\n",
       " 13,\n",
       " 23,\n",
       " 5,\n",
       " 20,\n",
       " 23,\n",
       " 9,\n",
       " 20,\n",
       " 28,\n",
       " 5,\n",
       " 28,\n",
       " 21,\n",
       " 27,\n",
       " 26,\n",
       " 21,\n",
       " 16,\n",
       " 4,\n",
       " 20,\n",
       " 22,\n",
       " 16,\n",
       " 11,\n",
       " 11,\n",
       " 17,\n",
       " 22,\n",
       " 15,\n",
       " 1,\n",
       " 16,\n",
       " 19,\n",
       " 23,\n",
       " 24,\n",
       " 8,\n",
       " 25,\n",
       " 12,\n",
       " 14,\n",
       " 7,\n",
       " 1,\n",
       " 29,\n",
       " 5,\n",
       " 25,\n",
       " 8,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 17,\n",
       " 26,\n",
       " 2,\n",
       " 2,\n",
       " 8,\n",
       " 16,\n",
       " 23,\n",
       " 3,\n",
       " 10,\n",
       " 10,\n",
       " 0,\n",
       " 7,\n",
       " ...]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2dab7db4-ccd1-45ee-bdb7-52f261fe287f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Targets</th>\n",
       "      <th>Predictions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>five</td>\n",
       "      <td>five</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>left</td>\n",
       "      <td>left</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>five</td>\n",
       "      <td>five</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>left</td>\n",
       "      <td>left</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cat</td>\n",
       "      <td>cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8365</th>\n",
       "      <td>zero</td>\n",
       "      <td>zero</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8366</th>\n",
       "      <td>cat</td>\n",
       "      <td>cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8367</th>\n",
       "      <td>left</td>\n",
       "      <td>left</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8368</th>\n",
       "      <td>zero</td>\n",
       "      <td>zero</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8369</th>\n",
       "      <td>up</td>\n",
       "      <td>up</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8370 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Targets Predictions\n",
       "0       five        five\n",
       "1       left        left\n",
       "2       five        five\n",
       "3       left        left\n",
       "4        cat         cat\n",
       "...      ...         ...\n",
       "8365    zero        zero\n",
       "8366     cat         cat\n",
       "8367    left        left\n",
       "8368    zero        zero\n",
       "8369      up          up\n",
       "\n",
       "[8370 rows x 2 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "word_list = Classes\n",
    "predictions_tensor = torch.tensor(predictions)\n",
    "targets_tensor = torch.tensor(targets_list)\n",
    "# Création d'un dictionnaire associant chaque mot à son indice\n",
    "word_to_index = {word: index for index, word in enumerate(word_list)}\n",
    "# Inversion de l'encodage\n",
    "targets = [word_list[index] for index in targets_tensor]\n",
    "predictions = [word_list[index] for index in predictions_tensor]\n",
    "# Création du DataFrame\n",
    "df = pd.DataFrame({'Targets': targets, 'Predictions': predictions})\n",
    "# Affichage du DataFrame\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e55e200-70a4-4194-8af7-f2509eadc458",
   "metadata": {},
   "source": [
    "### Eenregistrer le modèle PyTorch entraîné avec ses poids."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e89adb49-f9f9-4b0b-a7c8-8e0e6d9962be",
   "metadata": {},
   "outputs": [],
   "source": [
    "torch.save(model.state_dict(), 'model.pth')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5dc1cb7-f41e-4648-a6ae-b5d8aaa8c489",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99553cdf-c945-431a-9bed-e23747f0bbf1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7e778a6-5673-49de-9f9e-7cea34ee72db",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
